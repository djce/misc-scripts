#!/bin/bash

if [ $# != 3 -a $# != 4 ] ; then
	echo "Usage: git-push-new-repo localdir [user@]server remote/var/git [whatever.git]" >&2
	echo "" >&2
	echo "SOMEDIR should already be a valid git repository" >&2
	exit 2
fi

set -e -x

DIR="$1"
shift

# Make DIR absolute
pushd "$DIR" >/dev/null
DIR="$PWD"
popd >/dev/null

USER_AT_SERVER="$1"
shift
REMOTE_PATH="$1"
shift
DOTGITNAME=${1:-$( basename "$DIR" ).git}
shift || :

set -x

pushd "$DIR"

# Check there's a commit
git-rev-parse HEAD

# Check there's not already an origin
if git config --get remote.origin.url ; then exit 1 ; fi
if git config --get branch.master.remote ; then exit 1 ; fi
if git config --get branch.master.merge ; then exit 1 ; fi

popd

# Make REMOTE_PATH absolute
# FIXME: quoting errors
REMOTE_PATH=`ssh "$USER_AT_SERVER" "cd $REMOTE_PATH && pwd"`

TMPPATH="$( mktemp -d -t new-repo-XXXXXXXX )"
trap 'rm -rf "$TMPPATH"' 0
git clone --bare "$DIR" "$TMPPATH"/"$DOTGITNAME"
rsync -av --delete "$TMPPATH"/"$DOTGITNAME"/ "$USER_AT_SERVER:$REMOTE_PATH/$DOTGITNAME"/

pushd "$DIR"
git remote add origin "ssh://$USER_AT_SERVER$REMOTE_PATH/$DOTGITNAME"
git config branch.master.remote origin
git config branch.master.merge refs/heads/master
popd

echo "Copied $DIR to $USER_AT_SERVER:$REMOTE_PATH/$DOTGITNAME"

# eof
